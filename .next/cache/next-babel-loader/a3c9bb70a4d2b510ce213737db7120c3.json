{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/marcellegane/dev/kidsofcolour/Luna/components/molecules/AccordionItem/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport gsap from 'gsap';\nimport { AccordionItem, AccordionItemHeader, AccordionItemLabel, AccordionItemIcon, AccordionItemMain, AccordionItemContent } from './index.style';\nimport { IconPlus } from '../../../svgs';\n\nvar ThisAccordionItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(ThisAccordionItem, _React$Component);\n\n  var _super = _createSuper(ThisAccordionItem);\n\n  function ThisAccordionItem(props) {\n    var _this;\n\n    _classCallCheck(this, ThisAccordionItem);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isOpen: props.isOpen\n    };\n    _this.contentRef = React.createRef();\n    _this.contentInnerRef = React.createRef();\n    _this.handleItemToggle = _this.handleItemToggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ThisAccordionItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var isOpen = this.state.isOpen;\n\n      if (isOpen) {\n        this.contentRef.current.style.display = 'block';\n        this.contentInnerRef.current.style.opacity = 1;\n      }\n    }\n  }, {\n    key: \"handleItemToggle\",\n    value: function handleItemToggle() {\n      var isOpen = this.state.isOpen;\n      var content = this.contentRef.current;\n      var contentInner = this.contentInnerRef.current;\n\n      if (isOpen) {\n        var tl = gsap.timeline({\n          onComplete: function onComplete() {\n            content.style.display = 'none';\n            content.style.height = '';\n          }\n        });\n        tl.to(content, {\n          duration: 0.3,\n          height: 0,\n          ease: 'power3.out'\n        }).to(contentInner, {\n          duration: 0.1,\n          opacity: 0\n        }, 0);\n      } else {\n        content.style.display = 'block';\n        var contentHeight = content.offsetHeight;\n        content.style.height = 0;\n\n        var _tl = gsap.timeline({\n          onComplete: function onComplete() {\n            content.style.height = '';\n          }\n        });\n\n        _tl.to(content, {\n          duration: 0.3,\n          height: contentHeight,\n          ease: 'power3.out'\n        }).fromTo(contentInner, {\n          duration: 0.15,\n          opacity: 0\n        }, {\n          opacity: 1,\n          delay: 0.05,\n          ease: 'power2.out'\n        }, 0.1);\n      }\n\n      this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          label = _this$props.label;\n      var isOpen = this.state.isOpen;\n      return __jsx(React.Fragment, null, children && label && __jsx(AccordionItem, {\n        \"data-test\": \"accordion-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, __jsx(AccordionItemHeader, {\n        isOpen: isOpen,\n        onClick: this.handleItemToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, __jsx(AccordionItemLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, label), __jsx(AccordionItemIcon, {\n        isOpen: isOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, __jsx(IconPlus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }))), __jsx(AccordionItemMain, {\n        ref: this.contentRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, __jsx(AccordionItemContent, {\n        ref: this.contentInnerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, children))));\n    }\n  }]);\n\n  return ThisAccordionItem;\n}(React.Component);\n\n_defineProperty(ThisAccordionItem, \"propTypes\", {\n  children: PropTypes.node,\n  label: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool\n});\n\n_defineProperty(ThisAccordionItem, \"defaultProps\", {\n  isOpen: false\n});\n\nexport { ThisAccordionItem as AccordionItem };","map":{"version":3,"sources":["/Users/marcellegane/dev/kidsofcolour/Luna/components/molecules/AccordionItem/index.js"],"names":["React","PropTypes","gsap","AccordionItem","AccordionItemHeader","AccordionItemLabel","AccordionItemIcon","AccordionItemMain","AccordionItemContent","IconPlus","ThisAccordionItem","props","state","isOpen","contentRef","createRef","contentInnerRef","handleItemToggle","bind","current","style","display","opacity","content","contentInner","tl","timeline","onComplete","height","to","duration","ease","contentHeight","offsetHeight","fromTo","delay","setState","prevState","children","label","Component","node","string","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport gsap from 'gsap'\n\nimport {\n  AccordionItem,\n  AccordionItemHeader,\n  AccordionItemLabel,\n  AccordionItemIcon,\n  AccordionItemMain,\n  AccordionItemContent,\n} from './index.style'\nimport { IconPlus } from '../../../svgs'\n\nclass ThisAccordionItem extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    label: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    isOpen: false,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isOpen: props.isOpen,\n    }\n\n    this.contentRef = React.createRef()\n    this.contentInnerRef = React.createRef()\n    this.handleItemToggle = this.handleItemToggle.bind(this)\n  }\n\n  componentDidMount() {\n    const { isOpen } = this.state\n\n    if (isOpen) {\n      this.contentRef.current.style.display = 'block'\n      this.contentInnerRef.current.style.opacity = 1\n    }\n  }\n\n  handleItemToggle() {\n    const { isOpen } = this.state\n    const content = this.contentRef.current\n    const contentInner = this.contentInnerRef.current\n\n    if (isOpen) {\n      const tl = gsap.timeline({\n        onComplete: () => {\n          content.style.display = 'none'\n          content.style.height = ''\n        },\n      })\n\n      tl.to(content, {\n        duration: 0.3,\n        height: 0,\n        ease: 'power3.out',\n      }).to(\n        contentInner,\n        {\n          duration: 0.1,\n          opacity: 0,\n        },\n        0\n      )\n    } else {\n      content.style.display = 'block'\n      const contentHeight = content.offsetHeight\n      content.style.height = 0\n\n      const tl = gsap.timeline({\n        onComplete: () => {\n          content.style.height = ''\n        },\n      })\n\n      tl.to(content, {\n        duration: 0.3,\n        height: contentHeight,\n        ease: 'power3.out',\n      }).fromTo(\n        contentInner,\n        {\n          duration: 0.15,\n          opacity: 0,\n        },\n        {\n          opacity: 1,\n          delay: 0.05,\n          ease: 'power2.out',\n        },\n        0.1\n      )\n    }\n\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n    }))\n  }\n\n  render() {\n    const { children, label } = this.props\n    const { isOpen } = this.state\n\n    return (\n      <>\n        {children && label && (\n          <AccordionItem data-test=\"accordion-item\">\n            <AccordionItemHeader\n              isOpen={isOpen}\n              onClick={this.handleItemToggle}\n            >\n              <AccordionItemLabel>{label}</AccordionItemLabel>\n              <AccordionItemIcon isOpen={isOpen}>\n                <IconPlus />\n              </AccordionItemIcon>\n            </AccordionItemHeader>\n\n            <AccordionItemMain ref={this.contentRef}>\n              <AccordionItemContent ref={this.contentInnerRef}>\n                {children}\n              </AccordionItemContent>\n            </AccordionItemMain>\n          </AccordionItem>\n        )}\n      </>\n    )\n  }\n}\n\nexport { ThisAccordionItem as AccordionItem }\n"]},"metadata":{},"sourceType":"module"}