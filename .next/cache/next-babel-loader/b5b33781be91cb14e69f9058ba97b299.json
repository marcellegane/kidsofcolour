{"ast":null,"code":"var _jsxFileName = \"/Users/marcellegane/dev/kidsofcolour/Luna/layouts/Grid/GridItem.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridItem } from './GridItem.style';\n\nconst ThisGridItem = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(GridItem, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 3\n    }\n  }), children);\n};\n\nThisGridItem.propTypes = {\n  children: PropTypes.node,\n  gutters: PropTypes.bool\n};\nThisGridItem.defaultProps = {\n  gutters: true\n};\nexport { ThisGridItem as GridItem };","map":{"version":3,"sources":["/Users/marcellegane/dev/kidsofcolour/Luna/layouts/Grid/GridItem.js"],"names":["React","PropTypes","GridItem","ThisGridItem","children","props","propTypes","node","gutters","bool","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,MAAgBC,KAAhB;;AAAA,SACnB,MAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAsBD,QAAtB,CADmB;AAAA,CAArB;;AAIAD,YAAY,CAACG,SAAb,GAAyB;AACvBF,EAAAA,QAAQ,EAAEH,SAAS,CAACM,IADG;AAEvBC,EAAAA,OAAO,EAAEP,SAAS,CAACQ;AAFI,CAAzB;AAKAN,YAAY,CAACO,YAAb,GAA4B;AAC1BF,EAAAA,OAAO,EAAE;AADiB,CAA5B;AAIA,SAASL,YAAY,IAAID,QAAzB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { GridItem } from './GridItem.style'\n\nconst ThisGridItem = ({ children, ...props }) => (\n  <GridItem {...props}>{children}</GridItem>\n)\n\nThisGridItem.propTypes = {\n  children: PropTypes.node,\n  gutters: PropTypes.bool,\n}\n\nThisGridItem.defaultProps = {\n  gutters: true,\n}\n\nexport { ThisGridItem as GridItem }\n"]},"metadata":{},"sourceType":"module"}