{"ast":null,"code":"import styled from 'styled-components';\nimport { Layout } from '../../config/layout';\nimport { pxToRem, pxToEm } from '../../utilities';\nvar breakpoints = Layout.breakpoints,\n    grid = Layout.grid;\nvar columnsTotal = grid.columnsTotal;\nvar defaultGutter = grid.gutter;\n\nvar getGridItemWidth = function getGridItemWidth(includeGutters, columnSpan) {\n  return \"width: \".concat(includeGutters ? \"calc(\".concat(columnSpan / columnsTotal * 100, \"% - \").concat(pxToRem(defaultGutter * 2), \")\") : \"\".concat(columnSpan / columnsTotal * 100, \"%\"), \";\");\n};\n\nvar getGridMargin = function getGridMargin(includeGutters) {\n  return \"margin: \".concat(includeGutters ? \"\".concat(pxToRem(defaultGutter * 2), \" \").concat(pxToRem(defaultGutter), \" 0\") : \"0\", \";\");\n};\n\nvar getGridItemOffset = function getGridItemOffset(includeGutters, columnSpan) {\n  return \"margin-left: \".concat(includeGutters ? \"calc(\".concat(columnSpan / columnsTotal * 100, \"% + \").concat(pxToRem(defaultGutter), \")\") : \"\".concat(columnSpan / columnsTotal * 100, \"%\"), \";\");\n};\n\nvar GridItem = styled.div.withConfig({\n  displayName: \"GridItemstyle__GridItem\",\n  componentId: \"sc-1b5xv2k-0\"\n})([\"\", \"\"], function (props) {\n  var gutters = props.gutters;\n  var defaultStyles = \"\\n      \".concat(getGridItemWidth(gutters, columnsTotal), \"\\n      \").concat(getGridMargin(gutters), \"\\n    \");\n  var columnSpanStyles = Object.keys(breakpoints).reduce(function (string, breakpoint) {\n    if (props[breakpoint]) {\n      return \"\".concat(string, \"\\n            @media only screen and (min-width: \").concat(pxToEm(breakpoints[breakpoint] + 1), \") {\\n              \").concat(getGridItemWidth(gutters, props[breakpoint]), \"\\n              \").concat(getGridMargin(gutters), \"\\n            }\\n          \");\n    }\n\n    return string;\n  }, \"\");\n  var offsetStyles = Object.keys(breakpoints).reduce(function (string, breakpoint) {\n    if (props[\"offset-\".concat(breakpoint)]) {\n      return \"\".concat(string, \"\\n            @media only screen and (min-width: \").concat(pxToEm(breakpoints[breakpoint] + 1), \") {\\n              \").concat(getGridItemOffset(gutters, props[\"offset-\".concat(breakpoint)]), \"\\n            }\\n          \");\n    }\n\n    return string;\n  }, \"\");\n  var orderStyles = Object.keys(breakpoints).reduce(function (string, breakpoint) {\n    if (props[\"order-\".concat(breakpoint)]) {\n      return \"\".concat(string, \"\\n        @media only screen and (min-width: \").concat(pxToEm(breakpoints[breakpoint] + 1), \") {\\n          order: \").concat(props[\"order-\".concat(breakpoint)], \";\\n        }\\n      \");\n    }\n\n    return string;\n  }, \"\");\n  return \"\\n      \".concat(defaultStyles, \"\\n      \").concat(columnSpanStyles, \"\\n      \").concat(offsetStyles, \"\\n      \").concat(orderStyles, \"\\n    \");\n});\nexport { GridItem };","map":{"version":3,"sources":["/Users/marcellegane/dev/kidsofcolour/Luna/layouts/Grid/GridItem.style.js"],"names":["styled","Layout","pxToRem","pxToEm","breakpoints","grid","columnsTotal","defaultGutter","gutter","getGridItemWidth","includeGutters","columnSpan","getGridMargin","getGridItemOffset","GridItem","div","props","gutters","defaultStyles","columnSpanStyles","Object","keys","reduce","string","breakpoint","offsetStyles","orderStyles"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport { Layout } from '../../config/layout'\nimport { pxToRem, pxToEm } from '../../utilities'\n\nconst { breakpoints, grid } = Layout\nconst { columnsTotal } = grid\nconst defaultGutter = grid.gutter\n\nconst getGridItemWidth = (includeGutters, columnSpan) =>\n  `width: ${\n    includeGutters\n      ? `calc(${(columnSpan / columnsTotal) * 100}% - ${pxToRem(\n          defaultGutter * 2\n        )})`\n      : `${(columnSpan / columnsTotal) * 100}%`\n  };`\n\nconst getGridMargin = includeGutters =>\n  `margin: ${\n    includeGutters\n      ? `${pxToRem(defaultGutter * 2)} ${pxToRem(defaultGutter)} 0`\n      : `0`\n  };`\n\nconst getGridItemOffset = (includeGutters, columnSpan) =>\n  `margin-left: ${\n    includeGutters\n      ? `calc(${(columnSpan / columnsTotal) * 100}% + ${pxToRem(\n          defaultGutter\n        )})`\n      : `${(columnSpan / columnsTotal) * 100}%`\n  };`\n\nconst GridItem = styled.div`\n  ${props => {\n    const { gutters } = props\n\n    const defaultStyles = `\n      ${getGridItemWidth(gutters, columnsTotal)}\n      ${getGridMargin(gutters)}\n    `\n\n    const columnSpanStyles = Object.keys(breakpoints).reduce(\n      (string, breakpoint) => {\n        if (props[breakpoint]) {\n          return `${string}\n            @media only screen and (min-width: ${pxToEm(\n              breakpoints[breakpoint] + 1\n            )}) {\n              ${getGridItemWidth(gutters, props[breakpoint])}\n              ${getGridMargin(gutters)}\n            }\n          `\n        }\n        return string\n      },\n      ``\n    )\n\n    const offsetStyles = Object.keys(breakpoints).reduce(\n      (string, breakpoint) => {\n        if (props[`offset-${breakpoint}`]) {\n          return `${string}\n            @media only screen and (min-width: ${pxToEm(\n              breakpoints[breakpoint] + 1\n            )}) {\n              ${getGridItemOffset(gutters, props[`offset-${breakpoint}`])}\n            }\n          `\n        }\n        return string\n      },\n      ``\n    )\n\n    const orderStyles = Object.keys(breakpoints).reduce(\n      (string, breakpoint) => {\n        if (props[`order-${breakpoint}`]) {\n          return `${string}\n        @media only screen and (min-width: ${pxToEm(\n          breakpoints[breakpoint] + 1\n        )}) {\n          order: ${props[`order-${breakpoint}`]};\n        }\n      `\n        }\n        return string\n      },\n      ``\n    )\n\n    return `\n      ${defaultStyles}\n      ${columnSpanStyles}\n      ${offsetStyles}\n      ${orderStyles}\n    `\n  }}\n`\n\nexport { GridItem }\n"]},"metadata":{},"sourceType":"module"}