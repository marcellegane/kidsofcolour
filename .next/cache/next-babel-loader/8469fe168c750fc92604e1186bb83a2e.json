{"ast":null,"code":"var _jsxFileName = \"/Users/marcellegane/dev/kidsofcolour/Luna/layouts/Grid/Grid.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridMain } from './Grid.style';\n\nconst ThisGrid = (_ref) => {\n  let props = Object.assign({}, _ref);\n  const {\n    children\n  } = props;\n  return __jsx(Grid, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }), __jsx(GridMain, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), children));\n};\n\nThisGrid.propTypes = {\n  children: PropTypes.node.isRequired,\n  overflow: PropTypes.string,\n  gutters: PropTypes.bool,\n  direction: PropTypes.string,\n  justify: PropTypes.string,\n  align: PropTypes.string\n};\nThisGrid.defaultProps = {\n  overflow: 'hidden',\n  gutters: true,\n  direction: 'row',\n  justify: 'flex-start',\n  align: 'flex-start'\n};\nexport { ThisGrid as Grid };","map":{"version":3,"sources":["/Users/marcellegane/dev/kidsofcolour/Luna/layouts/Grid/Grid.js"],"names":["React","PropTypes","Grid","GridMain","ThisGrid","props","children","propTypes","node","isRequired","overflow","string","gutters","bool","direction","justify","align","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,cAA/B;;AAEA,MAAMC,QAAQ,GAAG,UAAkB;AAAA,MAAZC,KAAY;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,SACE,MAAC,IAAD,eAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAsBC,QAAtB,CADF,CADF;AAKD,CAPD;;AASAF,QAAQ,CAACG,SAAT,GAAqB;AACnBD,EAAAA,QAAQ,EAAEL,SAAS,CAACO,IAAV,CAAeC,UADN;AAEnBC,EAAAA,QAAQ,EAAET,SAAS,CAACU,MAFD;AAGnBC,EAAAA,OAAO,EAAEX,SAAS,CAACY,IAHA;AAInBC,EAAAA,SAAS,EAAEb,SAAS,CAACU,MAJF;AAKnBI,EAAAA,OAAO,EAAEd,SAAS,CAACU,MALA;AAMnBK,EAAAA,KAAK,EAAEf,SAAS,CAACU;AANE,CAArB;AASAP,QAAQ,CAACa,YAAT,GAAwB;AACtBP,EAAAA,QAAQ,EAAE,QADY;AAEtBE,EAAAA,OAAO,EAAE,IAFa;AAGtBE,EAAAA,SAAS,EAAE,KAHW;AAItBC,EAAAA,OAAO,EAAE,YAJa;AAKtBC,EAAAA,KAAK,EAAE;AALe,CAAxB;AAQA,SAASZ,QAAQ,IAAIF,IAArB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, GridMain } from './Grid.style'\n\nconst ThisGrid = ({ ...props }) => {\n  const { children } = props\n  return (\n    <Grid {...props}>\n      <GridMain {...props}>{children}</GridMain>\n    </Grid>\n  )\n}\n\nThisGrid.propTypes = {\n  children: PropTypes.node.isRequired,\n  overflow: PropTypes.string,\n  gutters: PropTypes.bool,\n  direction: PropTypes.string,\n  justify: PropTypes.string,\n  align: PropTypes.string,\n}\n\nThisGrid.defaultProps = {\n  overflow: 'hidden',\n  gutters: true,\n  direction: 'row',\n  justify: 'flex-start',\n  align: 'flex-start',\n}\n\nexport { ThisGrid as Grid }\n"]},"metadata":{},"sourceType":"module"}