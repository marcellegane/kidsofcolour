{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/marcellegane/dev/kidsofcolour/Luna/components/molecules/AccordionItem/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport gsap from 'gsap';\nimport { AccordionItem, AccordionItemHeader, AccordionItemLabel, AccordionItemIcon, AccordionItemMain, AccordionItemContent } from './index.style';\nimport { IconPlus } from '../../../svgs';\n\nclass ThisAccordionItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: props.isOpen\n    };\n    this.contentRef = React.createRef();\n    this.contentInnerRef = React.createRef();\n    this.handleItemToggle = this.handleItemToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      isOpen\n    } = this.state;\n\n    if (isOpen) {\n      this.contentRef.current.style.display = 'block';\n      this.contentInnerRef.current.style.opacity = 1;\n    }\n  }\n\n  handleItemToggle() {\n    const {\n      isOpen\n    } = this.state;\n    const content = this.contentRef.current;\n    const contentInner = this.contentInnerRef.current;\n\n    if (isOpen) {\n      const tl = gsap.timeline({\n        onComplete: () => {\n          content.style.display = 'none';\n          content.style.height = '';\n        }\n      });\n      tl.to(content, {\n        duration: 0.3,\n        height: 0,\n        ease: 'power3.out'\n      }).to(contentInner, {\n        duration: 0.1,\n        opacity: 0\n      }, 0);\n    } else {\n      content.style.display = 'block';\n      const contentHeight = content.offsetHeight;\n      content.style.height = 0;\n      const tl = gsap.timeline({\n        onComplete: () => {\n          content.style.height = '';\n        }\n      });\n      tl.to(content, {\n        duration: 0.3,\n        height: contentHeight,\n        ease: 'power3.out'\n      }).fromTo(contentInner, {\n        duration: 0.15,\n        opacity: 0\n      }, {\n        opacity: 1,\n        delay: 0.05,\n        ease: 'power2.out'\n      }, 0.1);\n    }\n\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  render() {\n    const {\n      children,\n      label\n    } = this.props;\n    const {\n      isOpen\n    } = this.state;\n    return __jsx(React.Fragment, null, children && label && __jsx(AccordionItem, {\n      \"data-test\": \"accordion-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(AccordionItemHeader, {\n      isOpen: isOpen,\n      onClick: this.handleItemToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, __jsx(AccordionItemLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, label), __jsx(AccordionItemIcon, {\n      isOpen: isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(IconPlus, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), __jsx(AccordionItemMain, {\n      ref: this.contentRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(AccordionItemContent, {\n      ref: this.contentInnerRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, children))));\n  }\n\n}\n\n_defineProperty(ThisAccordionItem, \"propTypes\", {\n  children: PropTypes.node,\n  label: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool\n});\n\n_defineProperty(ThisAccordionItem, \"defaultProps\", {\n  isOpen: false\n});\n\nexport { ThisAccordionItem as AccordionItem };","map":{"version":3,"sources":["/Users/marcellegane/dev/kidsofcolour/Luna/components/molecules/AccordionItem/index.js"],"names":["React","PropTypes","gsap","AccordionItem","AccordionItemHeader","AccordionItemLabel","AccordionItemIcon","AccordionItemMain","AccordionItemContent","IconPlus","ThisAccordionItem","Component","constructor","props","state","isOpen","contentRef","createRef","contentInnerRef","handleItemToggle","bind","componentDidMount","current","style","display","opacity","content","contentInner","tl","timeline","onComplete","height","to","duration","ease","contentHeight","offsetHeight","fromTo","delay","setState","prevState","render","children","label","node","string","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport gsap from 'gsap'\n\nimport {\n  AccordionItem,\n  AccordionItemHeader,\n  AccordionItemLabel,\n  AccordionItemIcon,\n  AccordionItemMain,\n  AccordionItemContent,\n} from './index.style'\nimport { IconPlus } from '../../../svgs'\n\nclass ThisAccordionItem extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    label: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    isOpen: false,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isOpen: props.isOpen,\n    }\n\n    this.contentRef = React.createRef()\n    this.contentInnerRef = React.createRef()\n    this.handleItemToggle = this.handleItemToggle.bind(this)\n  }\n\n  componentDidMount() {\n    const { isOpen } = this.state\n\n    if (isOpen) {\n      this.contentRef.current.style.display = 'block'\n      this.contentInnerRef.current.style.opacity = 1\n    }\n  }\n\n  handleItemToggle() {\n    const { isOpen } = this.state\n    const content = this.contentRef.current\n    const contentInner = this.contentInnerRef.current\n\n    if (isOpen) {\n      const tl = gsap.timeline({\n        onComplete: () => {\n          content.style.display = 'none'\n          content.style.height = ''\n        },\n      })\n\n      tl.to(content, {\n        duration: 0.3,\n        height: 0,\n        ease: 'power3.out',\n      }).to(\n        contentInner,\n        {\n          duration: 0.1,\n          opacity: 0,\n        },\n        0\n      )\n    } else {\n      content.style.display = 'block'\n      const contentHeight = content.offsetHeight\n      content.style.height = 0\n\n      const tl = gsap.timeline({\n        onComplete: () => {\n          content.style.height = ''\n        },\n      })\n\n      tl.to(content, {\n        duration: 0.3,\n        height: contentHeight,\n        ease: 'power3.out',\n      }).fromTo(\n        contentInner,\n        {\n          duration: 0.15,\n          opacity: 0,\n        },\n        {\n          opacity: 1,\n          delay: 0.05,\n          ease: 'power2.out',\n        },\n        0.1\n      )\n    }\n\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen,\n    }))\n  }\n\n  render() {\n    const { children, label } = this.props\n    const { isOpen } = this.state\n\n    return (\n      <>\n        {children && label && (\n          <AccordionItem data-test=\"accordion-item\">\n            <AccordionItemHeader\n              isOpen={isOpen}\n              onClick={this.handleItemToggle}\n            >\n              <AccordionItemLabel>{label}</AccordionItemLabel>\n              <AccordionItemIcon isOpen={isOpen}>\n                <IconPlus />\n              </AccordionItemIcon>\n            </AccordionItemHeader>\n\n            <AccordionItemMain ref={this.contentRef}>\n              <AccordionItemContent ref={this.contentInnerRef}>\n                {children}\n              </AccordionItemContent>\n            </AccordionItemMain>\n          </AccordionItem>\n        )}\n      </>\n    )\n  }\n}\n\nexport { ThisAccordionItem as AccordionItem }\n"]},"metadata":{},"sourceType":"module"}